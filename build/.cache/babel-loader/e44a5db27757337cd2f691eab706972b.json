{"remainingRequest":"c:\\Users\\Administrator\\AppData\\Local\\Programs\\We码开发者工具\\resources\\app\\extensions\\wecode.wecode\\resources\\sdk\\node_modules.asar\\babel-loader\\lib\\index.js??ref--5-1!c:\\Users\\Administrator\\AppData\\Local\\Programs\\We码开发者工具\\resources\\app\\extensions\\wecode.wecode\\resources\\sdk\\node_modules.asar\\cache-loader\\dist\\cjs.js??ref--4-0!C:\\Users\\Administrator\\AppData\\Roaming\\WeCode-IDE\\wecode-eslint-config\\node_modules\\eslint-loader\\dist\\cjs.js??ref--4-1!c:\\Users\\Administrator\\Desktop\\模板\\模板\\src\\components\\Tree\\index.js","dependencies":[{"path":"c:\\Users\\Administrator\\Desktop\\模板\\模板\\src\\components\\Tree\\index.js","mtime":1595833387360},{"path":"c:\\Users\\Administrator\\AppData\\Local\\Programs\\We码开发者工具\\resources\\app\\extensions\\wecode.wecode\\resources\\sdk\\node_modules.asar\\cache-loader\\dist\\cjs.js","mtime":1595838103392},{"path":"c:\\Users\\Administrator\\AppData\\Local\\Programs\\We码开发者工具\\resources\\app\\extensions\\wecode.wecode\\resources\\sdk\\node_modules.asar\\babel-loader\\lib\\index.js","mtime":1595838103392},{"path":"c:\\Users\\Administrator\\AppData\\Local\\Programs\\We码开发者工具\\resources\\app\\extensions\\wecode.wecode\\resources\\sdk\\node_modules.asar\\cache-loader\\dist\\cjs.js","mtime":1595838103392},{"path":"C:\\Users\\Administrator\\AppData\\Roaming\\WeCode-IDE\\wecode-eslint-config\\node_modules\\eslint-loader\\dist\\cjs.js","mtime":1593236802109}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["c:\\Users\\Administrator\\Desktop\\模板\\模板\\src\\components\\Tree\\index.js"],"names":["React","getTree","Tree","css","TreeNode","UserTree","props","data","map","item","i","groupname","groupId","compUserList","e","extInfo","photo","headerPhoto","name","user_id","renderTreeNodes","children","selectedKeys","include_type","node","dataRef","selectCallBack","state","list","stype","member_type","group_id","ismine","isPlat","comp_id","then","res","setState","onSelect","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {getTree} from './../../servers/comp';\r\nimport { Tree } from 'antd';\r\nimport * as css from './index.module.css';\r\nimport './../../../node_modules/antd/lib/tree/style/css'\r\nconst { TreeNode } = Tree;\r\n\r\nclass UserTree extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            list:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const {include_type=-1,stype=0} = this.props;\r\n        getTree({\r\n            member_type: -1,\r\n            group_id: 0,\r\n            ismine: 1,\r\n            isPlat: 1,\r\n            include_type:include_type,\r\n            stype: stype,\r\n            comp_id: 0,\r\n        }).then((res)=>{\r\n            this.setState({\r\n                list:res.data\r\n            })\r\n        })\r\n    }\r\n    \r\n    renderTreeNodes = (data)=>\r\n        data.map((item,i) => {\r\n            // if (item.children) {\r\n            //     return (\r\n            //         <TreeNode title={item.groupname}\r\n            //             key={item.groupId}\r\n            //             dataRef={item}\r\n            //             icon={<span></span>}\r\n            //             checkable={false}\r\n            //         >\r\n            //             {\r\n            //                 item.compUserList.map((e)=>{\r\n            //                     return <TreeNode title={e.name}\r\n            //                     key={''+e.user_id}\r\n            //                     dataRef={e}\r\n            //                     icon={<span></span>}\r\n            //                     checkable={true}\r\n            //                 />\r\n            //                 })\r\n            //             }\r\n            //             {renderTreeNodes(item.children)}\r\n            //         </TreeNode>\r\n            //     );\r\n            // }\r\n            return  <TreeNode title={item.groupname}\r\n                        key={item.groupId}\r\n                        dataRef={item}\r\n                        icon={<span></span>}\r\n                    >\r\n                        {\r\n                            item.compUserList.map((e)=>{\r\n                                return <TreeNode title={<div>\r\n                                    {\r\n                                        e.extInfo.photo?<img className={css.headerPhoto} src={e.extInfo.photo}/>:<i class=\"icon-nav icon-nav-headPortrait\"></i>\r\n                                    }\r\n                                    \r\n                                    {e.name}\r\n                                </div>}\r\n                                key={''+e.user_id}\r\n                                dataRef={e}\r\n                                icon={<span></span>}\r\n                            />\r\n                            })\r\n                        }\r\n                        {this.renderTreeNodes(item.children)}\r\n                    </TreeNode>\r\n        });\r\n    onSelect=(selectedKeys,e)=>{\r\n        const {include_type=-1} = this.props;\r\n        if((include_type==-1&&e.node.dataRef.user_id)||(include_type==0&&e.node.dataRef.groupId)){\r\n            this.props.selectCallBack(selectedKeys,e.node.dataRef);\r\n        }\r\n        \r\n    }\r\n    render(){\r\n        const {list} = this.state;\r\n        return <div>\r\n        <Tree showIcon={true} checkable={false} onSelect={this.onSelect} > \r\n            {\r\n                this.renderTreeNodes(list)\r\n            }\r\n        </Tree>\r\n      \r\n    </div>\r\n    }    \r\n   \r\n}\r\n\r\nexport default UserTree;"]}]}